version: '3'

services:

  nodejs:
    build: 
      context: ./nodejs
    container_name: app
    # Modificando o entrypoint padrão para que ele espere o container db ficar totalmente pronto e depois executa o entrypoint padrão já veio na imagem node:16
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    networks:
      - node-network
    volumes:
      - ./nodejs:/usr/src/app
    tty: true
    ports:
      - "3000:3000"
    # Define que este service só subirá depois do db
    depends_on:
      - db      

  db:
    image: mysql:5.7
    # comando padrão para boot no container
    command: --innodb-use-native-aio=0
    container_name: db
    # para que se houver algum problema e o container cair, ele vai subir outro automáticamente
    restart: always
    # se precisar entrar no service de forma interativa, precisa habilitar o tty
    tty: true
    # volumes para que quando o container morrer, não percamos o conteúdo do mysql.
    # ou seja, tudo que for inserido dentro do container na pasta '/var/lib/mysql' será escrito também na pasta local './mysql'
    volumes:
      - ./mysql-volume:/var/lib/mysql
    # Setar variáveis de ambiente no container
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
      # - MYSQL_USER=root
    # usar rede específica
    networks:
      - node-network

# criar uma rede
networks:
  node-network:
    driver: bridge